import java.util.Random;



public class neighbours {
	int[][] NBH;
	Random r = new Random();
	
	int[][] TFNbH;
	//constructor
	public neighbours(int countNbr) {
	//System.out.println("neighbours");
		NBH = new int[countNbr][3]; //initiate array with required number of neighbour slots
		
		//Toggleframe input, conway neighbourhood default
		TFNbH = new int[][] {
			{-1,-1,0,0},
			{-1,0,0,1},
			{-1,1,0,2},
			{0,-1,0,3},
			{0,1,0,4},
			{1,-1,0,5},
			{1,0,0,6},
			{1,1,0,7}
		};
	}
	//called to define a neighbour's position (x,y,z,neighbour id)
	public void setNBH(int xx, int yy, int zz, int nbr) {
		NBH[nbr][0] = xx;
		NBH[nbr][1] = yy;
		NBH[nbr][2] = zz;
	}

	public void newNbrhood(int countNbr) {
		NBH = new int[countNbr][3]; //initiate array with required number of neighbour slots
	}
	
	
	public void setNbrhood(){
		newNbrhood(TFNbH.length);
		for (int i = 0; i < TFNbH.length; i++){
			setNBH(TFNbH[i][0], TFNbH[i][1], TFNbH[i][2], i);
		}
	}
	
}